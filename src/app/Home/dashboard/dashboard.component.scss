body {
  margin: 0;
  padding: 0;
  color: #fff;
  font-family: 'Open Sans', Helvetica, sans-serif;
  box-sizing: border-box;
}


.dashboard-container {
  display: grid; // En este caso utilizaría grid, ya que necesitamos organizar elementos en dos dimensiones.
  height: 100vh;
}

.dashboard {
  background-color: #fff;
}

.dashboard-cards {
  column-count: 1; // Lo utilizamos para dividir en columnas los cards dependiendo del tamaño del dispositivo.
  column-gap: 20px;
  padding: 20px !important;
  margin: 0 !important;
}

.card {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  background-color: #acd7ff;
  margin-bottom: 20px;
  -webkit-column-break-inside: avoid; // Evita roturas de salto dentro del contenedor
  padding: 24px;
  box-sizing: border-box;
}

/* Aquí asignamos el tamaño deseado de cada elemento html(.card) usando las pseudoclases :first-child para el primer elemento, :nth-child(*) para
   los elementos de la posición que deseemos y :last-child para el último de ellos.
   De esta forma tenemos el control de todos los elementos de nuestro grid independientemente de donde estén posicionados.
*/
.card:first-child {
  height: 450px;
}

.card:nth-child(2) {
  height: 200px;
}

.card:nth-child(3) {
  height: 250px;
}

.card:nth-child(4) {
  height: 250px;
}

.card:last-child {
  height: 500px;
}


/* Medium screens breakpoint (1050px) */
@media only screen and (min-width: 65.625em) {
  /* Break out main cards into two columns */
  .dashboard-cards {
    column-count: 2; // En este caso, el contenido se dividirá en dos columnas cuando sea superior a tablet
  }
}
